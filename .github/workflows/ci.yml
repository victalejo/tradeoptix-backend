name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: tradeoptix_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/tradeoptix_test?sslmode=disable
        JWT_SECRET: test-secret-key
        ENVIRONMENT: test
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Run golangci-lint
<<<<<<< HEAD
      uses: golangci/golangci-lint-action@v6
=======
      uses: golangci/golangci-lint-action@v8
>>>>>>> 7fa68fe5e74b842afc073708b8df7d45867eac82
      with:
        version: v1.59.1
        args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Run Gosec Security Scanner
      run: |
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec -fmt sarif -out results.sarif ./...

    - name: Upload SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif

  frontend-admin:
    name: Test Admin Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./admin-frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: admin-frontend/package-lock.json

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run type-check

    - name: Build project
      run: npm run build

  mobile-app:
    name: Test Mobile App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tradeoptix-app

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: tradeoptix-app/package-lock.json

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Run type check
      run: npx tsc --noEmit

    - name: Run Expo Doctor
      run: npx expo-doctor

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Build binary
      run: |
        CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o bin/tradeoptix-server cmd/server/main.go

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tradeoptix-server
        path: bin/tradeoptix-server