#!/bin/bash

# Script de verificaci√≥n final - CORS y funcionalidad completa
echo "üöÄ VERIFICACI√ìN FINAL DEL SISTEMA TRADEOPTIX"
echo "=============================================="

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "\n${BLUE}üìä ESTADO DE LOS SERVICIOS:${NC}"

# Verificar Backend
echo -n "Backend (8080): "
if curl -s http://localhost:8080/health > /dev/null; then
    echo -e "${GREEN}‚úÖ FUNCIONANDO${NC}"
    BACKEND_STATUS="OK"
else
    echo -e "${RED}‚ùå NO DISPONIBLE${NC}"
    BACKEND_STATUS="ERROR"
fi

# Verificar Frontend
echo -n "Frontend (3000): "
if curl -s http://localhost:3000 > /dev/null; then
    echo -e "${GREEN}‚úÖ FUNCIONANDO${NC}"
    FRONTEND_STATUS="OK"
    FRONTEND_PORT="3000"
elif curl -s http://localhost:3001 > /dev/null; then
    echo -e "${GREEN}‚úÖ FUNCIONANDO (Puerto 3001)${NC}"
    FRONTEND_STATUS="OK"
    FRONTEND_PORT="3001"
else
    echo -e "${RED}‚ùå NO DISPONIBLE${NC}"
    FRONTEND_STATUS="ERROR"
fi

echo -e "\n${BLUE}üîí PRUEBAS DE CORS:${NC}"

if [ "$BACKEND_STATUS" == "OK" ] && [ "$FRONTEND_STATUS" == "OK" ]; then
    # Test CORS para Noticias
    echo -n "CORS /admin/news: "
    CORS_NEWS=$(curl -s -H "Origin: http://localhost:${FRONTEND_PORT}" -X OPTIONS http://localhost:8080/api/v1/admin/news | grep -c "Access-Control-Allow-Origin")
    if [ "$CORS_NEWS" -gt 0 ]; then
        echo -e "${GREEN}‚úÖ CONFIGURADO${NC}"
    else
        echo -e "${RED}‚ùå ERROR${NC}"
    fi
    
    # Test CORS para Notificaciones  
    echo -n "CORS /admin/notifications: "
    CORS_NOTIF=$(curl -s -H "Origin: http://localhost:${FRONTEND_PORT}" -X OPTIONS http://localhost:8080/api/v1/admin/notifications | grep -c "Access-Control-Allow-Origin")
    if [ "$CORS_NOTIF" -gt 0 ]; then
        echo -e "${GREEN}‚úÖ CONFIGURADO${NC}"
    else
        echo -e "${RED}‚ùå ERROR${NC}"
    fi
    
    echo -e "\n${BLUE}üìã HEADERS CORS CONFIGURADOS:${NC}"
    curl -s -H "Origin: http://localhost:${FRONTEND_PORT}" -X OPTIONS http://localhost:8080/api/v1/admin/news | grep "Access-Control" | sed 's/^/  /'
else
    echo -e "${RED}‚ùå No se pueden hacer pruebas CORS - servicios no disponibles${NC}"
fi

echo -e "\n${BLUE}‚öôÔ∏è CONFIGURACI√ìN ACTUAL:${NC}"
echo "‚Ä¢ Backend URL: http://localhost:8080"
echo "‚Ä¢ Frontend URL: http://localhost:${FRONTEND_PORT:-3000}"
echo "‚Ä¢ Variables de entorno:"
if [ -f "admin-frontend/.env.local" ]; then
    grep "NEXT_PUBLIC_API_URL" admin-frontend/.env.local | sed 's/^/  /'
else
    echo -e "  ${RED}‚ùå archivo .env.local no encontrado${NC}"
fi

echo -e "\n${YELLOW}üéØ PASOS PARA PROBAR LA SOLUCI√ìN:${NC}"
echo "1. Abre el navegador en: http://localhost:${FRONTEND_PORT:-3000}"
echo "2. Inicia sesi√≥n con tus credenciales de administrador"
echo "3. Navega a 'Noticias' - NO deber√≠as ver errores de CORS"
echo "4. Navega a 'Notificaciones' - NO deber√≠as ver errores de CORS"
echo "5. Abre las herramientas de desarrollo (F12) y revisa la consola"

if [ "$BACKEND_STATUS" == "OK" ] && [ "$FRONTEND_STATUS" == "OK" ]; then
    echo -e "\n${GREEN}üéâ ¬°TODOS LOS SERVICIOS EST√ÅN FUNCIONANDO!${NC}"
    echo -e "${GREEN}‚úÖ La soluci√≥n CORS est√° completa y lista para usar.${NC}"
else
    echo -e "\n${RED}‚ö†Ô∏è  ALGUNOS SERVICIOS NO EST√ÅN DISPONIBLES${NC}"
    if [ "$BACKEND_STATUS" != "OK" ]; then
        echo "‚Ä¢ Para iniciar el backend: make run"
    fi
    if [ "$FRONTEND_STATUS" != "OK" ]; then
        echo "‚Ä¢ Para iniciar el frontend: cd admin-frontend && npm run dev"
    fi
fi

echo -e "\n${BLUE}üìö DOCUMENTACI√ìN:${NC}"
echo "‚Ä¢ Ver: CORS_SOLUTION_COMPLETE.md para detalles t√©cnicos"
echo "‚Ä¢ Configuraci√≥n CORS: internal/middleware/cors.go"
echo "‚Ä¢ Configuraci√≥n Frontend: admin-frontend/.env.local"